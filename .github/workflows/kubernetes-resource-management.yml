name: Kubernetes Resource Management

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * 0'  # Ejecutar cada domingo a medianoche
  workflow_dispatch:  # Permite la ejecuciÃ³n manual

env:
  KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}

jobs:
  manage-kubernetes-resources:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up kubectl
      uses: azure/setup-kubectl@v1

    - name: Configure kubectl
      run: |
        echo "$KUBE_CONFIG" | base64 -d > kubeconfig.yaml
        chmod 600 kubeconfig.yaml
        export KUBECONFIG=kubeconfig.yaml

    - name: Set up Helm
      uses: azure/setup-helm@v3
      with:
        version: 'latest'

    - name: Install or update Monitoring resources
      run: make install-monitoring
      continue-on-error: true

    - name: Install or update Logging resources
      run: make install-logging
      continue-on-error: true

    - name: Install or update Resource Management
      run: make install-resource-management
      continue-on-error: true

    - name: Apply Resource Quotas
      run: make apply-resource-quotas
      continue-on-error: true

    - name: Apply Limit Ranges
      run: make apply-limit-ranges
      continue-on-error: true

    - name: Install or update HPA
      run: make install-hpa
      continue-on-error: true

    - name: Install or update VPA
      run: make install-vpa
      continue-on-error: true

    - name: Update all Helm charts
      run: make update-charts
      continue-on-error: true

    - name: Expose services
      run: make expose-services
      continue-on-error: true

    - name: Get service URLs
      run: make get-service-urls
      id: get-urls

    - name: Debug - Print GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"

    - name: Debug - Check GitHub Token permissions
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "Token permissions:"
        curl -H "Authorization: token $GITHUB_TOKEN" https://api.github.com/rate_limit

    - name: Create Release Notes
      run: |
        cat << EOF > release_notes.md
        # Service URLs

        ${{ steps.get-urls.outputs.stdout }}

        Please note that you may need to use appropriate authentication to access these services.
        EOF
        cat release_notes.md

    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Service URLs ${{ github.run_number }}
        body_path: release_notes.md
        draft: false
        prerelease: false

    - name: Show resource usage
      run: make show-resource-usage

    - name: Clean up kubeconfig
      run: rm kubeconfig.yaml
      if: always()