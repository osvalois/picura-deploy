# kubernetes/monitoring/grafana/grafana-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      securityContext:
        fsGroup: 472
        supplementalGroups:
          - 0
      containers:
        - name: grafana
          image: grafana/grafana:8.3.3
          ports:
            - name: http
              containerPort: 3000
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 100Mi
          volumeMounts:
            - name: config
              mountPath: /etc/grafana/grafana.ini
              subPath: grafana.ini
            - name: storage
              mountPath: /var/lib/grafana
          env:
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: grafana-admin-credentials
                  key: admin-password
            - name: GF_SERVER_ROOT_URL
              value: "https://grafana.picura.com"
            - name: GF_AUTH_AZURE_AD_ENABLED
              value: "true"
            - name: GF_AUTH_AZURE_AD_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: grafana-azure-ad-credentials
                  key: client-id
            - name: GF_AUTH_AZURE_AD_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: grafana-azure-ad-credentials
                  key: client-secret
            - name: GF_AUTH_AZURE_AD_AUTH_URL
              value: "https://login.microsoftonline.com/<tenant-id>/oauth2/authorize"
            - name: GF_AUTH_AZURE_AD_TOKEN_URL
              value: "https://login.microsoftonline.com/<tenant-id>/oauth2/token"
      volumes:
        - name: config
          configMap:
            name: grafana-config
        - name: storage
          persistentVolumeClaim:
            claimName: grafana-storage
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: monitoring
spec:
  selector:
    app: grafana
  ports:
    - port: 80
      targetPort: 3000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana-ingress
  namespace: monitoring
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - grafana.picura.com
    secretName: grafana-tls
  rules:
  - host: grafana.picura.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: grafana
            port: 
              number: 80
